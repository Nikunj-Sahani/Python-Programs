---------------><-------------------><----------------

<|> 𝐏𝐲𝐭𝐡𝐨𝐧 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|> 
     >> Python operators are special symbols or keywords used to perform operations on variables and values.
     
<|> 𝐓𝐲𝐩𝐞𝐬 𝐨𝐟 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|>
      >> Python supoorts a wide range of operators, which can be categorized into different groups based on their functionality.
      >> 7 types of operator in python.

          :: Arithmetic Operator
          :: Assignment operator
          :: Bitwise operator
          :: Logical operator
          :: Membership operator
          :: Comparison operator
          :: Identity operator

-------------------><-----------------------><--------------------

|< 𝟏 >| 𝐀𝐫𝐢𝐭𝐡𝐦𝐞𝐭𝐢𝐜 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|>
         >> Used to perform basic mathematical operations.
   _________________________________________________________
   | 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 |><|   𝐃𝐞𝐬𝐜𝐫𝐢𝐩𝐭𝐢𝐨𝐧    |><|     𝐄𝐱𝐚𝐦𝐩𝐥𝐞        |
   |"""""""""""|"""""""""""""""""""""|""""""""""""""""""""""|
   |     +     |     Addition        |     5 + 3 = 8        |
   |-----------|---------------------|----------------------|
   |     -     |     Subtraction     |     5 - 3 = 2        |
   |-----------|---------------------|----------------------|
   |     *     |     Multiplication  |     5 * 3 = 15       |
   |-----------|---------------------|----------------------|
   |     /     |     Division        |     5 / 2 = 2.5      |
   |-----------|---------------------|----------------------|
   |     %     | Modulus (Remainder) |     5 % 2 = 1        |
   |-----------|---------------------|----------------------|
   |     **    |   Exponentiation    |     2 ** 3 = 8       |
   |-----------|---------------------|----------------------|  
   |    //     |   Floor Division    |     5 // 2 = 2       |
   |-----------|---------------------|----------------------| 
   |'''''''''''|'''''''''''''''''''''|''''''''''''''''''''''|

<><><><><><><><><><><><><><><><><><><<><><><><><><><><><><><><><><><><><>

|< 𝟐 >| 𝐀𝐬𝐬𝐢𝐠𝐧𝐦𝐞𝐧𝐭 𝐨𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|>
         >> Used to assign values to variables.
   _______________________________________________________________
   | 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 |><|       𝐃𝐞𝐬𝐜𝐫𝐢𝐩𝐭𝐢𝐨𝐧      |><|     𝐄𝐱𝐚𝐦𝐩𝐥𝐞        |
   |"""""""""""|"""""""""""""""""""""""""""|""""""""""""""""""""""|
   |     =     |          Assign           |    a = 5             |   
   |-----------|---------------------------|----------------------|
   |    +=     |      Add and assign       |    a += 3 #(a=8)     |  
   |-----------|---------------------------|----------------------|
   |    -=     |    Subtract and assign    |    a -= 3 #(a=5)     |
   |-----------|---------------------------|----------------------|
   |    *=     |    Multiply and assign    |    a *= 3 #(a=15)    |
   |-----------|---------------------------|----------------------|
   |    /=     |     Divide and assign     |    a /= 2 #(a=7.5)   |
   |-----------|---------------------------|----------------------|
   |    %=     |    Modulus and assign     |    a %= 2            |
   |-----------|---------------------------|----------------------|  
   |    //=    |  Floor divide and assign  |    a //= 2           |
   |-----------|---------------------------|----------------------|
   |    **=    |  Exponentiate and assign  |    a **= 3           |  
   |-----------|---------------------------|----------------------|
   |     &=    |  Bitwise AND and assign   |    a &= 3            |
   |-----------|---------------------------|----------------------|
   |    '=     |  Bitwise OR and assign    |         '            |
   |-----------|---------------------------|----------------------|
   |    ^=     |  Bitwise XOR and assign   |       a ^= 3         |  
   |-----------|----------------------------\----------------------\
   |    <<=    | Bitwise left shift & assign |      a <<= 2         |
   |-----------|-----------------------------|----------------------|
   |    >>=    | Bitwise right shift & assign|      a >>= 2         |
   |-----------|-----------------------------|----------------------|
   |'''''''''''|'''''''''''''''''''''''''''''|''''''''''''''''''''''|

<><><><><><><><><><><><><><><><><><><<><><><><><><><><><><><><><><><><><><><><><><>><

|< 𝟑 >| 𝐋𝐨𝐠𝐢𝐜𝐚𝐥 𝐨𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|>
         >> Used to combine conditional statements.

   ___________________________________________________________________________________________________
   | 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 |><|   𝐃𝐞𝐬𝐜𝐫𝐢𝐩𝐭𝐢𝐨𝐧   |><|     𝐄𝐱𝐚𝐦𝐩𝐥𝐞           |              𝐌𝐞𝐚𝐧𝐢𝐧𝐠𝐬                 |
   |"""""""""""|""""""""""""""""""""|"""""""""""""""""""""""""|"""""""""""""""""""""""""""""""""""""""|
   |    and    |     Logical AND    |  True and False = False | True only, if both operands are true. | 
   |                                |     T & T = true        |                                       |
   |                                |     T & F = false       |                                       |
   |                                |     F & T = false       |                                       |
   |                                |     F & F = false       |                                       |
   |-----------|--------------------|-------------------------|---------------------------------------|
   |     or    |     Logical OR     |  True or False = True   | True when, if one operands is true.   |
   |                                |     T & T = true        |                                       |
   |                                |     T & F = true        |                                       |
   |                                |     F & T = true        |                                       |
   |                                |     F & F = false       |                                       |
   |-----------|--------------------|-------------------------|---------------------------------------|
   |    not    |     Logical NOT    |  not True = false       | True,if operand is false .            |
   |           |                    |  not false = true       | False, if operand is true.            |
   |-----------|--------------------|-------------------------|---------------------------------------|
   |'''''''''''|''''''''''''''''''''|'''''''''''''''''''''''''|'''''''''''''''''''''''''''''''''''''''|

<><><><><><><><><><><><><><><><><><><<><><><><><><><><><><><><><><><><><><><><><><><><><>

|< 𝟒 >| 𝐁𝐢𝐭𝐰𝐢𝐬𝐞 𝐨𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|>
         >> Operate on binary representations of numbers.

   __________________________________________________________________
   | 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 |><|      𝐃𝐞𝐬𝐜𝐫𝐢𝐩𝐭𝐢𝐨𝐧      |><|     𝐄𝐱𝐚𝐦𝐩𝐥𝐞            |
   |"""""""""""|""""""""""""""""""""""""""|""""""""""""""""""""""""""|
1. |     &     |       Bitwise AND        |  a = 5 (Binary -  0101)  |
   |-----------|--------------------------|  b = 3 (Binary -  0011)  |
   | both bits must be 1 to result in 1.  |  result = a & b = 0001   |
   |                                      |  result = 1 in decimal   |
   |><><><><><><><><><><><><><><><><><>><><><><><><><><><><><><><><><|
   ___________________________________________________________________
2. |     |     |       Bitwise OR         |  a = 5 (Binary -  0101)  | 
   |-----------|--------------------------|  b = 3 (Binary -  0011)  |
   |  One bit must be 1 to result in 1.   |  result = a | b = 0111   |
   |                                      |  result = 7 in decimal   |
   |><><><><><><><><><><><><><><><><><>><><><><><><><><><><><><><><><|
   ___________________________________________________________________
3. |     ^     |       Bitwise XOR        |  a = 5 (binary -  0101)  |
   |-----------|--------------------------|  b = 3 (Binary -  0011)  |
   | bit must be different to result in 1.|  result = a ^ b = 0110   |
   |                                      |  result = 6 in decimal   |
   |><><><><><><><><><><><><><><><><><>><><><><><><><><><><><><><><><|
   ___________________________________________________________________
4. |     ~     |       Bitwise NOT        |   a = 5 (Binary - 0101)  |
   |-----------|--------------------------|   result = -(a + 1)      |
   | It’s equivalent to -(n+1) for        |   result = -(0101 + 1)   |
   |  signed integers.                    |   result = -6 in decimal |
   |><><><><><><><><><><><><><><><><><>><><><><><><><><><><><><><><><|
   ___________________________________________________________________
5. |    <<     |    Bitwise left Shift    |   a = 5 (Binary - 0101)  |
   |-----------|--------------------------|   result = a << 1        |
   | Each shift is equivalent to          |   result = 1010          |
   |    multiplying by 2                  |   result = 10 in decimal |
   |><><><><><><><><><><><><><><><><><>><><><><><><><><><><><><><><><|
   ___________________________________________________________________
6. |    >>     |    Bitwise right Shift   |   a = 5 (Binary - 0101)  |
   |-----------|--------------------------|   result = a >> 1        |
   | For positive numbers, the leftmost   |   result = 0010          |
   |  bit is filled with 0                |   result = 2 in decimal  |
   |><><><><><><><><><><><><><><><><><>><><><><><><><><><><><><><><><|

|< 𝟓 >| 𝐂𝐨𝐦𝐩𝐚𝐫𝐢𝐬𝐨𝐧 𝐨𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|>
        >> Used to compare two values. They return either True or False.
        >> Known as Relational Operator
   _________________________________________________________
   | 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 |><|   𝐃𝐞𝐬𝐜𝐫𝐢𝐩𝐭𝐢𝐨𝐧    |><|     𝐄𝐱𝐚𝐦𝐩𝐥𝐞        |
   |"""""""""""|"""""""""""""""""""""|""""""""""""""""""""""|
   |    ==     |     Equal to        |     5 == 3 = false   |
   |-----------|---------------------|----------------------|
   |    !=     |     Not Equal to    |     5 != 3 = true    |
   |-----------|---------------------|----------------------|
   |     >     |     Greater than    |     5 > 3 = true     |
   |-----------|---------------------|----------------------|
   |     <     |     Less than       |     5 < 3 = false    |
   |-----------|----------------------\---------------------|
   |    >=     |Greater than / Equal to|   5 >= 3 = true    |
   |-----------|-----------------------|--------------------|
   |    <=     | Less than or Equal to |   5 <= 3 = false   |
   |-----------|-----------------------|--------------------|  
   |'''''''''''|'''''''''''''''''''''''|''''''''''''''''''''|






