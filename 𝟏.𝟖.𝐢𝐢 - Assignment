--------------------><-----------------------><------------------------

|< 𝟐 >| 𝐀𝐬𝐬𝐢𝐠𝐧𝐦𝐞𝐧𝐭 𝐨𝐩𝐞𝐫𝐚𝐭𝐨𝐫 <|>
         >> Used to assign values to variables.
    >> Assignment operators are used to assign values to variables, often combining assignment with a mathematical or logical operation.

   ____________________________________________________________________________________
   | 𝐎𝐩𝐞𝐫𝐚𝐭𝐨𝐫 |><|       𝐃𝐞𝐬𝐜𝐫𝐢𝐩𝐭𝐢𝐨𝐧      |><|     𝐄𝐱𝐚𝐦𝐩𝐥𝐞        |    𝐄𝐪𝐮𝐢𝐯𝐚𝐥𝐞𝐧𝐭 𝐭𝐨    |
   |"""""""""""|"""""""""""""""""""""""""""|""""""""""""""""""""""|""""""""""""""""""""|
   |     =     |          Assign           |    a = 5             |                    |
   |-----------|---------------------------|----------------------|--------------------|
   |    +=     |      Add and assign       |    a += 3 #(a=8)     |   a = a + 3 = 8    |
   |-----------|---------------------------|----------------------|--------------------|
   |    -=     |    Subtract and assign    |    a -= 3 #(a=5)     |   a = a - 3 = 5    |
   |-----------|---------------------------|----------------------|--------------------|
   |    *=     |    Multiply and assign    |    a *= 3 #(a=15)    |   a = a * 3 = 15   |
   |-----------|---------------------------|----------------------|--------------------|
   |    /=     |     Divide and assign     |    a /= 2 #(a=7.5)   |   a = a / 3 = 1.6  |
   |-----------|---------------------------|----------------------|--------------------|
   |    %=     |    Modulus and assign     |    a %= 2            |   a = a % 3 = 2    |
   |-----------|---------------------------|----------------------|--------------------| 
   |    //=    |  Floor divide and assign  |    a //= 2           |   a = a // 3 = 1   |
   |-----------|---------------------------|----------------------|--------------------|
   |    **=    |  Exponentiate and assign  |    a **= 3           |   a = a ** 3 = 125 |
   |-----------|---------------------------|----------------------|--------------------|
   |     &=    |  Bitwise AND and assign   |    a &= 3            |   a = a & 3 = 1    |
   |-----------|---------------------------|----------------------|--------------------|
   |    '=     |  Bitwise OR and assign    |        |             |   a = a | 3 = 5    |
   |-----------|---------------------------|----------------------|--------------------|
   |    ^=     |  Bitwise XOR and assign   |       a ^= 3         |   a = a ^ 3 = 0    |  
   |-----------|----------------------------\----------------------\--------------------\
   |    <<=    | Bitwise left shift & assign |      a <<= 2         |  a = a << 3 = 20   |
   |-----------|-----------------------------|----------------------|--------------------|
   |    >>=    | Bitwise right shift & assign|      a >>= 2         |  a = a >> 3 = 10   |
   |-----------|-----------------------------|----------------------|--------------------|
   |'''''''''''|'''''''''''''''''''''''''''''|''''''''''''''''''''''|''''''''''''''''''''|

--------------------------><---------------------------------><-----------------------------

𝙿𝚢𝚝𝚑𝚘𝚗 𝚌𝚘𝚍𝚎 -->> code it one by one of assign value , + , - , * , /. 
                >> Get the output below of code in readable.

    # Assign a value
     a = 10
     print("Initial value of a:", a)

        #Add and assign
           a = a + 5
           print("After a += 5:", a)  # 15

        #Subtract and assign
           a = a - 3
           print("After a -= 3:", a)  # 12

        #Multiply and assign
           a = a * 2
           print("After a *= 2:", a)  # 24

        #Divide and assign
            a = a / 4
            print("After a /= 4:", a)  # 6.0

        #Floor divide and assign
            a = a // 2
            print("After a //= 2:", a)  # 3.0

        #Modulus and assign
            a = a % 2
            print("After a %= 2:", a)  # 1.0

        #Exponentiate and assign
            a = a ** 3
            print("After a **= 3:", a)  # 1.0

        #Bitwise AND and assign
            b = 5  # Binary: 0101
            a = 3  # Binary: 0011
            a = a & b
            print("After a &= b:", a)  # Binary: 0001 -> 1

        #Bitwise OR and assign
             a = a | b
             print("After a |= b:", a)  # Binary: 0101 -> 5

        #Bitwise XOR and assign
             a = a ^ b
             print("After a ^= b:", a)  # Binary: 0000 -> 0

        #Bitwise left shift and assign
             a = 5
             a = a << 2
             print("After a <<= 2:", a)  # Binary: 10100 -> 20

        #Bitwise right shift and assign
             a = a >> 1
             print("After a >>= 1:", a)  # Binary: 1010 -> 10

--------------------------><---------------------------------><-----------------------------
#Output for all --
       Initial value of a: 10
        After a += 5: 15
         After a -= 3: 12
          After a *= 2: 24
           After a /= 4: 6.0
            After a //= 2: 3.0
             After a %= 2: 1.0
              After a **= 3: 1.0
               After a &= b: 1
                After a |= b: 5
                 After a ^= b: 0
                  After a <<= 2: 20
                   After a >>= 1: 10


--------------------------><---------------------------------><-----------------------------


